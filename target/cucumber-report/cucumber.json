[
  {
    "line": 1,
    "elements": [
      {
        "line": 5,
        "name": "A valid file content and file name is given as input",
        "description": "",
        "id": "number-counter-service-implementation;a-valid-file-content-and-file-name-is-given-as-input",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 6,
            "name": "number pattern counter is initialized",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 7,
            "name": "an input of \"1000 a big surprise 2000 hello is a big surprise 1000\" and \"filename.txt\" is passed as input parameters",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 8,
            "name": "check whether the counter is returning correct counts",
            "match": {},
            "rows": [
              {
                "cells": [
                  "PatternCounter filename.txt 2",
                  ""
                ],
                "line": 9
              },
              {
                "cells": [
                  "1000",
                  "2"
                ],
                "line": 10
              },
              {
                "cells": [
                  "2000",
                  "1"
                ],
                "line": 11
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 12,
            "name": "check whether the \"1000\" count is 2 and \"2000\" count is 1",
            "match": {},
            "keyword": "And "
          }
        ]
      },
      {
        "line": 14,
        "name": "A valid file with content less than three words and file name is given as input",
        "description": "",
        "id": "number-counter-service-implementation;a-valid-file-with-content-less-than-three-words-and-file-name-is-given-as-input",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 15,
            "name": "number pattern counter is initialized",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 16,
            "name": "an input of \"1000 a\" and \"filename.txt\" is passed as input parameters",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 17,
            "name": "check whether the result is empty",
            "match": {},
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Number Counter Service Implementation",
    "description": "The contents of the file is provided and to see whether the core logic is working or not",
    "id": "number-counter-service-implementation",
    "keyword": "Feature",
    "uri": "counter/numbercount/numbercounter.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 4,
        "name": "Valid input text and file name is given",
        "description": "",
        "id": "phrase-counter-service-implementation;valid-input-text-and-file-name-is-given",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 5,
            "name": "phrase counter service is initialized",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 6,
            "name": "make sure the initial result is null",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 7,
            "name": "an input text of \"1000 a big surprise 2000 hello is a big surprise 1000\" and \"filename.txt\" is passed as input parameters",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 8,
            "name": "check the result is as expected",
            "match": {},
            "rows": [
              {
                "cells": [
                  "PatternCounter filename.txt 3",
                  ""
                ],
                "line": 9
              },
              {
                "cells": [
                  "1000 a big",
                  "1"
                ],
                "line": 10
              },
              {
                "cells": [
                  "a big surprise",
                  "2"
                ],
                "line": 11
              },
              {
                "cells": [
                  "big surprise 2000",
                  "1"
                ],
                "line": 12
              },
              {
                "cells": [
                  "surprise 2000 hello",
                  "1"
                ],
                "line": 13
              },
              {
                "cells": [
                  "2000 hello is",
                  "1"
                ],
                "line": 14
              },
              {
                "cells": [
                  "hello is a",
                  "1"
                ],
                "line": 15
              },
              {
                "cells": [
                  "is a big",
                  "1"
                ],
                "line": 16
              },
              {
                "cells": [
                  "big surprise 1000",
                  "1"
                ],
                "line": 17
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 19,
        "name": "null input text and file name is given",
        "description": "",
        "id": "phrase-counter-service-implementation;null-input-text-and-file-name-is-given",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 20,
            "name": "phrase counter service is initialized",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 21,
            "name": "make sure the initial result is null",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 22,
            "name": "an input text of \"\" and \"filename.txt\" is passed as input parameters",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 23,
            "name": "check the result is empty",
            "match": {},
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 25,
        "name": "valid string input text with less than 3 characters and file name is given",
        "description": "",
        "id": "phrase-counter-service-implementation;valid-string-input-text-with-less-than-3-characters-and-file-name-is-given",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 26,
            "name": "phrase counter service is initialized",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 27,
            "name": "make sure the initial result is null",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 28,
            "name": "an input text of \"one two\" and \"filename.txt\" is passed as input parameters",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 29,
            "name": "check the result is empty",
            "match": {},
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 31,
        "name": "valid string input text with exactly 3 characters and file name is given",
        "description": "",
        "id": "phrase-counter-service-implementation;valid-string-input-text-with-exactly-3-characters-and-file-name-is-given",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 32,
            "name": "phrase counter service is initialized",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 33,
            "name": "make sure the initial result is null",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 34,
            "name": "an input text of \"one two three\" and \"filename.txt\" is passed as input parameters",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 35,
            "name": "check the result is below",
            "match": {},
            "rows": [
              {
                "cells": [
                  "PatternCounter filename.txt 3",
                  ""
                ],
                "line": 36
              },
              {
                "cells": [
                  "one two three",
                  "1"
                ],
                "line": 37
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 38,
            "name": "check the size is 2",
            "match": {},
            "keyword": "And "
          }
        ]
      },
      {
        "line": 40,
        "name": "valid string input text with exactly 4 characters and file name is given",
        "description": "",
        "id": "phrase-counter-service-implementation;valid-string-input-text-with-exactly-4-characters-and-file-name-is-given",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 41,
            "name": "phrase counter service is initialized",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 42,
            "name": "make sure the initial result is null",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 43,
            "name": "an input text of \"one two three four\" and \"filename.txt\" is passed as input parameters",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 44,
            "name": "check the result is below",
            "match": {},
            "rows": [
              {
                "cells": [
                  "PatternCounter filename.txt 3",
                  ""
                ],
                "line": 45
              },
              {
                "cells": [
                  "one two three",
                  "1"
                ],
                "line": 46
              },
              {
                "cells": [
                  "two three four",
                  "1"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 48,
            "name": "check the size is 3 and last two words are skipped",
            "match": {},
            "keyword": "And "
          }
        ]
      },
      {
        "line": 50,
        "name": "To check the case sensitiveness of the output",
        "description": "",
        "id": "phrase-counter-service-implementation;to-check-the-case-sensitiveness-of-the-output",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 51,
            "name": "phrase counter service is initialized",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 52,
            "name": "make sure the initial result is null",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 53,
            "name": "an input text of \"one two three one TWO three\" and \"filename.txt\" is passed as input parameters",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 54,
            "name": "check the result is below",
            "match": {},
            "rows": [
              {
                "cells": [
                  "PatternCounter filename.txt 3",
                  ""
                ],
                "line": 55
              },
              {
                "cells": [
                  "one two three",
                  "1"
                ],
                "line": 56
              },
              {
                "cells": [
                  "two three one",
                  "1"
                ],
                "line": 57
              },
              {
                "cells": [
                  "three one TWO",
                  "1"
                ],
                "line": 58
              },
              {
                "cells": [
                  "one TWO three",
                  "1"
                ],
                "line": 59
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 60,
            "name": "check the size is 5 and last two words are skipped",
            "match": {},
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Phrase Counter Service Implementation",
    "description": "This service method counts the 3 letter phrases in the given text and is there are no 3 letters skips tat line",
    "id": "phrase-counter-service-implementation",
    "keyword": "Feature",
    "uri": "counter/phrasecount/phrasecounter.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 4,
        "name": "A valid text string and file name is passed",
        "description": "",
        "id": "word-counter-service-implementation;a-valid-text-string-and-file-name-is-passed",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 301055459,
              "error_message": "java.lang.ExceptionInInitializerError\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given Word count service is properly wired(counter/wordcount/wordcounter.feature:5)\nCaused by: java.lang.reflect.InaccessibleObjectException: Unable to make field private final java.util.Comparator java.util.TreeMap.comparator accessible: module java.base does not \"opens java.util\" to unnamed module @21b8d17c\n\tat java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:354)\n\tat java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)\n\tat java.base/java.lang.reflect.Field.checkCanSetAccessible(Field.java:178)\n\tat java.base/java.lang.reflect.Field.setAccessible(Field.java:172)\n\tat cucumber.deps.com.thoughtworks.xstream.core.util.Fields.locate(Fields.java:39)\n\tat cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter.\u003cclinit\u003e(TreeMapConverter.java:50)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n",
              "status": "failed"
            },
            "line": 5,
            "name": "Word count service is properly wired",
            "match": {
              "location": "WordCounterTest.word_count_service_is_properly_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "result is reset",
            "match": {
              "location": "WordCounterTest.result_is_reset()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "a valid text with content \"1000 a big surprise 2000 hello is a big surprise 1000\" is passed with file name as \"filename.txt\" is passed",
            "match": {
              "arguments": [
                {
                  "val": "1000 a big surprise 2000 hello is a big surprise 1000",
                  "offset": 27
                },
                {
                  "val": "filename.txt",
                  "offset": 111
                }
              ],
              "location": "WordCounterTest.a_valid_text_with_content_is_passed_with_file_name_as_is_passed(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "make sure the result is not empty",
            "match": {
              "location": "WordCounterTest.make_sure_the_result_is_not_empty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "check the value is as expected",
            "match": {
              "location": "WordCounterTest.check_the_value_is_as_expected(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PatternCounter filename.txt 1",
                  ""
                ],
                "line": 10
              },
              {
                "cells": [
                  "a",
                  "2"
                ],
                "line": 11
              },
              {
                "cells": [
                  "big",
                  "2"
                ],
                "line": 12
              },
              {
                "cells": [
                  "surprise",
                  "2"
                ],
                "line": 13
              },
              {
                "cells": [
                  "hello",
                  "1"
                ],
                "line": 14
              },
              {
                "cells": [
                  "is",
                  "1"
                ],
                "line": 15
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "line": 17,
        "name": "A text string which is empty and file name is passed",
        "description": "",
        "id": "word-counter-service-implementation;a-text-string-which-is-empty-and-file-name-is-passed",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 970917,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given Word count service is properly wired(counter/wordcount/wordcounter.feature:18)\n",
              "status": "failed"
            },
            "line": 18,
            "name": "Word count service is properly wired",
            "match": {
              "location": "WordCounterTest.word_count_service_is_properly_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "result is reset",
            "match": {
              "location": "WordCounterTest.result_is_reset()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "a valid text with content \"\" is passed with file name as \"filename.txt\" is passed",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 27
                },
                {
                  "val": "filename.txt",
                  "offset": 58
                }
              ],
              "location": "WordCounterTest.a_valid_text_with_content_is_passed_with_file_name_as_is_passed(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "check the value is empty",
            "match": {
              "location": "WordCounterTest.check_the_value_is_empty()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 23,
        "name": "A text string with less than 3 words and file name is passed",
        "description": "",
        "id": "word-counter-service-implementation;a-text-string-with-less-than-3-words-and-file-name-is-passed",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 682542,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given Word count service is properly wired(counter/wordcount/wordcounter.feature:24)\n",
              "status": "failed"
            },
            "line": 24,
            "name": "Word count service is properly wired",
            "match": {
              "location": "WordCounterTest.word_count_service_is_properly_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "result is reset",
            "match": {
              "location": "WordCounterTest.result_is_reset()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "a valid text with content \"one two\" is passed with file name as \"filename.txt\" is passed",
            "match": {
              "arguments": [
                {
                  "val": "one two",
                  "offset": 27
                },
                {
                  "val": "filename.txt",
                  "offset": 65
                }
              ],
              "location": "WordCounterTest.a_valid_text_with_content_is_passed_with_file_name_as_is_passed(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "check the value is empty",
            "match": {
              "location": "WordCounterTest.check_the_value_is_empty()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 29,
        "name": "A text string with exactly 3 and same words and file name is passed",
        "description": "",
        "id": "word-counter-service-implementation;a-text-string-with-exactly-3-and-same-words-and-file-name-is-passed",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2523041,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given Word count service is properly wired(counter/wordcount/wordcounter.feature:30)\n",
              "status": "failed"
            },
            "line": 30,
            "name": "Word count service is properly wired",
            "match": {
              "location": "WordCounterTest.word_count_service_is_properly_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "result is reset",
            "match": {
              "location": "WordCounterTest.result_is_reset()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "a valid text with content \"test test test\" is passed with file name as \"filename.txt\" is passed",
            "match": {
              "arguments": [
                {
                  "val": "test test test",
                  "offset": 27
                },
                {
                  "val": "filename.txt",
                  "offset": 72
                }
              ],
              "location": "WordCounterTest.a_valid_text_with_content_is_passed_with_file_name_as_is_passed(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "make sure the result is not empty",
            "match": {
              "location": "WordCounterTest.make_sure_the_result_is_not_empty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "check the value is as expected",
            "match": {
              "location": "WordCounterTest.check_the_value_is_as_expected(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PatternCounter filename.txt 1",
                  ""
                ],
                "line": 35
              },
              {
                "cells": [
                  "test",
                  "3"
                ],
                "line": 36
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "line": 38,
        "name": "To test the case sensitiveness of input text",
        "description": "",
        "id": "word-counter-service-implementation;to-test-the-case-sensitiveness-of-input-text",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 873583,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given Word count service is properly wired(counter/wordcount/wordcounter.feature:39)\n",
              "status": "failed"
            },
            "line": 39,
            "name": "Word count service is properly wired",
            "match": {
              "location": "WordCounterTest.word_count_service_is_properly_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "result is reset",
            "match": {
              "location": "WordCounterTest.result_is_reset()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "a valid text with content \"test TEST test\" is passed with file name as \"filename.txt\" is passed",
            "match": {
              "arguments": [
                {
                  "val": "test TEST test",
                  "offset": 27
                },
                {
                  "val": "filename.txt",
                  "offset": 72
                }
              ],
              "location": "WordCounterTest.a_valid_text_with_content_is_passed_with_file_name_as_is_passed(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "make sure the result is not empty",
            "match": {
              "location": "WordCounterTest.make_sure_the_result_is_not_empty()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "check the value is as expected",
            "match": {
              "location": "WordCounterTest.check_the_value_is_as_expected(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PatternCounter filename.txt 1",
                  ""
                ],
                "line": 44
              },
              {
                "cells": [
                  "test",
                  "2"
                ],
                "line": 45
              },
              {
                "cells": [
                  "TEST",
                  "1"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Word counter service implementation",
    "description": "This service method counts the distinct number of words in the string",
    "id": "word-counter-service-implementation",
    "keyword": "Feature",
    "uri": "counter/wordcount/wordcounter.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 8,
        "name": "the type entered is 1",
        "description": "",
        "id": "patternfactory-feature;the-type-entered-is-1",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 9,
            "name": "a factory instance",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 10,
            "name": "reset all fields",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 11,
            "name": "the entered string is \"1\"",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 12,
            "name": "check whether the factory returned a WordCounter instance",
            "match": {},
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 14,
        "name": "the type entered is 2",
        "description": "",
        "id": "patternfactory-feature;the-type-entered-is-2",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 15,
            "name": "a factory instance",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 16,
            "name": "the entered string is \"2\"",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 17,
            "name": "check whether the factory returned a NumberCounter instance",
            "match": {},
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 19,
        "name": "the type entered is 3",
        "description": "",
        "id": "patternfactory-feature;the-type-entered-is-3",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 20,
            "name": "a factory instance",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 21,
            "name": "the entered string is \"3\"",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 22,
            "name": "check whether the factory returned a PhraseCounter instance",
            "match": {},
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 24,
        "name": "the type entered is empty/null",
        "description": "",
        "id": "patternfactory-feature;the-type-entered-is-empty/null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 25,
            "name": "a factory instance",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 26,
            "name": "the entered string is \"\"",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 27,
            "name": "check whether the factory returned null instance",
            "match": {},
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 29,
        "name": "the type entered is greater than 3",
        "description": "",
        "id": "patternfactory-feature;the-type-entered-is-greater-than-3",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 30,
            "name": "a factory instance",
            "match": {},
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 31,
            "name": "the entered string is \"4\"",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 32,
            "name": "check whether the factory returned null instance",
            "match": {},
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "PatternFactory feature",
    "description": "Pattern factory can take a pattern value as string and returns corresponding matcher\r\nPresently supported pattern counters with type\r\n type \u003d 1 \u003d\u003e WordCounter\r\n type \u003d 2 \u003d\u003e NumberCounter\r\n type \u003d 3 \u003d\u003e PhraseCounter",
    "id": "patternfactory-feature",
    "keyword": "Feature",
    "uri": "factory/factory.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 7,
        "name": "User Enters file name with valid content and \"2\" as input",
        "description": "",
        "id": "number-pattern-matcher-integration-test;user-enters-file-name-with-valid-content-and-\"2\"-as-input",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 637333,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given check service class is wired(service/Service-NumberCountService.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "check service class is wired",
            "match": {
              "location": "ServiceNumberCountSpec.service_class_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user Enters file name as \"src/test/resources/testfiles/goodfile.txt\" and \"2\" as input pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/goodfile.txt",
                  "offset": 26
                },
                {
                  "val": "2",
                  "offset": 74
                }
              ],
              "location": "ServiceNumberCountSpec.user_Enters_file_name_as_and_as_input_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "expect the following number count results",
            "match": {
              "location": "ServiceNumberCountSpec.expect_the_following_number_count_results(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PatternCounter goodfile.txt 2",
                  ""
                ],
                "line": 11
              },
              {
                "cells": [
                  "1000",
                  "2"
                ],
                "line": 12
              },
              {
                "cells": [
                  "2000",
                  "1"
                ],
                "line": 13
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 15,
        "name": "User Enters file name with null content and \"2\" as input",
        "description": "",
        "id": "number-pattern-matcher-integration-test;user-enters-file-name-with-null-content-and-\"2\"-as-input",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 645208,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given check service class is wired(service/Service-NumberCountService.feature:16)\n",
              "status": "failed"
            },
            "line": 16,
            "name": "check service class is wired",
            "match": {
              "location": "ServiceNumberCountSpec.service_class_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "user Enters file name as \"src/test/resources/testfiles/nullfile.txt\" and \"2\" as input pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/nullfile.txt",
                  "offset": 26
                },
                {
                  "val": "2",
                  "offset": 74
                }
              ],
              "location": "ServiceNumberCountSpec.user_Enters_file_name_as_and_as_input_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "expect empty output",
            "match": {
              "location": "ServiceNumberCountSpec.expect_empty_output()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 20,
        "name": "User Enters file name with less than 3 words and \"2\" as input",
        "description": "",
        "id": "number-pattern-matcher-integration-test;user-enters-file-name-with-less-than-3-words-and-\"2\"-as-input",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1470667,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given check service class is wired(service/Service-NumberCountService.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "check service class is wired",
            "match": {
              "location": "ServiceNumberCountSpec.service_class_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "user Enters file name as \"src/test/resources/testfiles/badfile.txt\" and \"2\" as input pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/badfile.txt",
                  "offset": 26
                },
                {
                  "val": "2",
                  "offset": 73
                }
              ],
              "location": "ServiceNumberCountSpec.user_Enters_file_name_as_and_as_input_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "expect empty output",
            "match": {
              "location": "ServiceNumberCountSpec.expect_empty_output()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Number Pattern Matcher integration test",
    "description": "Counts occurrences of each unique numbers in the document\r\n1. User Enters a filename with location and 2 as pattern type\r\n2. User Enters a filename with path that has null value and 2 as pattern type\n3. User enters a filename with path that has only two words and 2 as pattern type",
    "id": "number-pattern-matcher-integration-test",
    "keyword": "Feature",
    "uri": "service/Service-NumberCountService.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 7,
        "name": "User Enters file name with valid input data and \"3\" as input",
        "description": "",
        "id": "phrase-pattern-matcher-integration-test;user-enters-file-name-with-valid-input-data-and-\"3\"-as-input",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 814083,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given check service classes are wired(service/Service-PhraseCountService.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "check service classes are wired",
            "match": {
              "location": "ServicePhraseCounterSpec.check_service_classes_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user Enters file name as \"src/test/resources/testfiles/goodfile.txt\" and \"3\" as count pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/goodfile.txt",
                  "offset": 26
                },
                {
                  "val": "3",
                  "offset": 74
                }
              ],
              "location": "ServicePhraseCounterSpec.user_Enters_file_name_as_and_as_count_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "expect the following word count results",
            "match": {
              "location": "ServicePhraseCounterSpec.expect_the_following_word_count_results(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PatternCounter goodfile.txt 3",
                  ""
                ],
                "line": 11
              },
              {
                "cells": [
                  "1000 a big",
                  "1"
                ],
                "line": 12
              },
              {
                "cells": [
                  "a big surprise",
                  "2"
                ],
                "line": 13
              },
              {
                "cells": [
                  "big surprise 2000",
                  "1"
                ],
                "line": 14
              },
              {
                "cells": [
                  "surprise 2000 hello",
                  "1"
                ],
                "line": 15
              },
              {
                "cells": [
                  "2000 hello is",
                  "1"
                ],
                "line": 16
              },
              {
                "cells": [
                  "hello is a",
                  "1"
                ],
                "line": 17
              },
              {
                "cells": [
                  "is a big",
                  "1"
                ],
                "line": 18
              },
              {
                "cells": [
                  "big surprise 1000",
                  "1"
                ],
                "line": 19
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 21,
        "name": "User Enters file name which has empty content and \"3\" as input",
        "description": "",
        "id": "phrase-pattern-matcher-integration-test;user-enters-file-name-which-has-empty-content-and-\"3\"-as-input",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 699167,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given check service classes are wired(service/Service-PhraseCountService.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "check service classes are wired",
            "match": {
              "location": "ServicePhraseCounterSpec.check_service_classes_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "user Enters file name as \"src/test/resources/testfiles/nullfile.txt\" and \"3\" as count pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/nullfile.txt",
                  "offset": 26
                },
                {
                  "val": "3",
                  "offset": 74
                }
              ],
              "location": "ServicePhraseCounterSpec.user_Enters_file_name_as_and_as_count_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "expect an empty output",
            "match": {
              "location": "ServicePhraseCounterSpec.expect_an_empty_output()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 26,
        "name": "User Enters file name with partial content and \"3\" as input",
        "description": "",
        "id": "phrase-pattern-matcher-integration-test;user-enters-file-name-with-partial-content-and-\"3\"-as-input",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 629667,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given check service classes are wired(service/Service-PhraseCountService.feature:27)\n",
              "status": "failed"
            },
            "line": 27,
            "name": "check service classes are wired",
            "match": {
              "location": "ServicePhraseCounterSpec.check_service_classes_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "user Enters file name as \"src/test/resources/testfiles/partialfile.txt\" and \"3\" as count pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/partialfile.txt",
                  "offset": 26
                },
                {
                  "val": "3",
                  "offset": 77
                }
              ],
              "location": "ServicePhraseCounterSpec.user_Enters_file_name_as_and_as_count_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "expect output with words count having atleast three words and skips the rest",
            "match": {
              "location": "ServicePhraseCounterSpec.expect_output_with_words_count_having_atleast_three_words_and_skips_the_rest(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PatternCounter partialfile.txt 3",
                  ""
                ],
                "line": 30
              },
              {
                "cells": [
                  "1000 a big",
                  "1"
                ],
                "line": 31
              },
              {
                "cells": [
                  "a big surprise",
                  "2"
                ],
                "line": 32
              },
              {
                "cells": [
                  "big surprise 2000",
                  "1"
                ],
                "line": 33
              },
              {
                "cells": [
                  "surprise 2000 hello",
                  "1"
                ],
                "line": 34
              },
              {
                "cells": [
                  "2000 hello is",
                  "1"
                ],
                "line": 35
              },
              {
                "cells": [
                  "hello is a",
                  "1"
                ],
                "line": 36
              },
              {
                "cells": [
                  "is a big",
                  "1"
                ],
                "line": 37
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Phrase Pattern Matcher integration test",
    "description": "Counts occurrences of each unique 3 sequence word in the document\r\n1. User Enters a filename with location and 1 as pattern type\r\n2. User Enters a filename with path that has null value and 1 as pattern type\r\n3. User enters a filename with path that has only two words and 1 as pattern type",
    "id": "phrase-pattern-matcher-integration-test",
    "keyword": "Feature",
    "uri": "service/Service-PhraseCountService.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 7,
        "name": "User Enters a filename with calid input and 1 as pattern type",
        "description": "",
        "id": "word-pattern-matcher-integration-test;user-enters-a-filename-with-calid-input-and-1-as-pattern-type",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 612750,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given service class is wired(service/Service-WordCountService.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "service class is wired",
            "match": {
              "location": "ServiceWordCountSpec.service_class_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters \"src/test/resources/testfiles/goodfile.txt\" as filename and \"1\" as pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/goodfile.txt",
                  "offset": 13
                },
                {
                  "val": "1",
                  "offset": 73
                }
              ],
              "location": "ServiceWordCountSpec.user_enters_as_filename_and_as_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "expect the following results",
            "match": {
              "location": "ServiceWordCountSpec.expect_the_following_results(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PatternCounter goodfile.txt 1",
                  ""
                ],
                "line": 11
              },
              {
                "cells": [
                  "a",
                  "2"
                ],
                "line": 12
              },
              {
                "cells": [
                  "big",
                  "2"
                ],
                "line": 13
              },
              {
                "cells": [
                  "surprise",
                  "2"
                ],
                "line": 14
              },
              {
                "cells": [
                  "hello",
                  "1"
                ],
                "line": 15
              },
              {
                "cells": [
                  "is",
                  "1"
                ],
                "line": 16
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 18,
        "name": "User Enters a filename with path that has null value and 1 as pattern type",
        "description": "",
        "id": "word-pattern-matcher-integration-test;user-enters-a-filename-with-path-that-has-null-value-and-1-as-pattern-type",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1058500,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given service class is wired(service/Service-WordCountService.feature:19)\n",
              "status": "failed"
            },
            "line": 19,
            "name": "service class is wired",
            "match": {
              "location": "ServiceWordCountSpec.service_class_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "user enters \"src/test/resources/testfiles/nullfile.txt\" as filename and \"1\" as pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/nullfile.txt",
                  "offset": 13
                },
                {
                  "val": "1",
                  "offset": 73
                }
              ],
              "location": "ServiceWordCountSpec.user_enters_as_filename_and_as_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "expect empty result",
            "match": {
              "location": "ServiceWordCountSpec.expect_empty_result()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 23,
        "name": "User enters a filename with path that has only two words and 1 as pattern type",
        "description": "",
        "id": "word-pattern-matcher-integration-test;user-enters-a-filename-with-path-that-has-only-two-words-and-1-as-pattern-type",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 609208,
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:574)\n\tat cucumber.deps.com.thoughtworks.xstream.XStream.\u003cinit\u003e(XStream.java:530)\n\tat cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.\u003cinit\u003e(LocalizedXStreams.java:50)\n\tat cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)\n\tat cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:299)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:98)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\tat ✽.Given service class is wired(service/Service-WordCountService.feature:24)\n",
              "status": "failed"
            },
            "line": 24,
            "name": "service class is wired",
            "match": {
              "location": "ServiceWordCountSpec.service_class_is_wired()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "user enters \"src/test/resources/testfiles/badfile.txt\" as filename and \"1\" as pattern type",
            "match": {
              "arguments": [
                {
                  "val": "src/test/resources/testfiles/badfile.txt",
                  "offset": 13
                },
                {
                  "val": "1",
                  "offset": 72
                }
              ],
              "location": "ServiceWordCountSpec.user_enters_as_filename_and_as_pattern_type(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "expect empty result",
            "match": {
              "location": "ServiceWordCountSpec.expect_empty_result()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Word Pattern Matcher integration test",
    "description": "Counts occurrences of each unique word in the document\n1. User Enters a filename with location and 1 as pattern type\n2. User Enters a filename with path that has null value and 1 as pattern type\n3. User enters a filename with path that has only two words and 1 as pattern type",
    "id": "word-pattern-matcher-integration-test",
    "keyword": "Feature",
    "uri": "service/Service-WordCountService.feature"
  }
]